{"version":3,"sources":["../src/index.ts"],"names":["dotenv","config","app","appEnv","process","env","APP_ENV","root","use","bodyParser","json","authMiddleware","logging","port","PORT","then","console","log","listen","catch","error"],"mappings":";;;;AACA;;AACA;;AAIA;;AACA;;AACA;;AAEA;;AAEA;;AAZA;AAIAA,gBAAOC,MAAP;;AAUA;AACA,MAAMC,GAAG,GAAG,uBAAZ;AAEA;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,OAAZ,IAAuB,aAAtC;AAEA;;AACA,MAAMC,IAAI,GAAG,GAAb,C,CAEA;;AACAL,GAAG,CAACM,GAAJ,CAAQC,oBAAWC,IAAX,EAAR;AACAR,GAAG,CAACM,GAAJ,CAAQD,IAAR,EAAcI,qBAAd;AACAT,GAAG,CAACM,GAAJ,CAAQD,IAAR,EAAcK,cAAd;AAEA,kBAAOV,GAAP;AAEA;;AACA,MAAMW,IAAI,GAAGT,OAAO,CAACC,GAAR,CAAYS,IAAZ,IAAoB,IAAjC;AAEA,iCACKC,IADL,CACU,YAAY;AACdC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AAEAf,EAAAA,GAAG,CAACgB,MAAJ,CAAWL,IAAX,EAAiB,MAAMG,OAAO,CAACC,GAAR,CAAa,4BAA2BJ,IAAK,EAA7C,CAAvB;AACH,CALL,EAMKM,KANL,CAMYC,KAAD,IAAWJ,OAAO,CAACC,GAAR,CAAYG,KAAZ,CANtB","sourcesContent":["/** Init env vars MUST BE FIRST */\nimport 'reflect-metadata';\nimport dotenv from \"dotenv\";\n\ndotenv.config();\n\nimport bodyParser from 'body-parser';\nimport express from 'express';\nimport { createConnection } from 'typeorm';\n\nimport router from './api';\n\nimport { authMiddleware, ErrorInterceptor, authChecker, logging } from './utils';\n\n/** Create app */\nconst app = express();\n\n/** Init Sentry */\nconst appEnv = process.env.APP_ENV || 'development';\n\n/** Add middleware */\nconst root = '/';\n\n// TODO make this secure in production\napp.use(bodyParser.json());\napp.use(root, authMiddleware);\napp.use(root, logging);\n\nrouter(app);\n\n/** Run server after connecting to DB */\nconst port = process.env.PORT || 5000;\n\ncreateConnection()\n    .then(async () => {\n        console.log('DB READY');\n\n        app.listen(port, () => console.log(`Server listening on port ${port}`));\n    })\n    .catch((error) => console.log(error));"],"file":"index.js"}