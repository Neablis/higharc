{"version":3,"sources":["../src/index.ts"],"names":["dotenv","config","app","appEnv","process","env","APP_ENV","use","bodyParser","json","authMiddleware","logging","missingRoute","errorHandler","port","PORT","then","console","log","listen","catch","error"],"mappings":";;;;AAAA;;AACA;;AAIA;;AACA;;AACA;;AAEA;;AAEA;;AARAA,gBAAOC,MAAP;;AAUA;AACA,MAAMC,GAAG,GAAG,uBAAZ;AAEA,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,OAAZ,IAAuB,aAAtC;AAEAJ,GAAG,CAACK,GAAJ,CAAQC,oBAAWC,IAAX,EAAR;AACAP,GAAG,CAACK,GAAJ,CAAQG,qBAAR;AACAR,GAAG,CAACK,GAAJ,CAAQI,cAAR;AAEA,kBAAOT,GAAP;AAEAA,GAAG,CAACK,GAAJ,CAAQK,mBAAR;AAEAV,GAAG,CAACK,GAAJ,CAAQM,mBAAR;AAEA;;AACA,MAAMC,IAAI,GAAGV,OAAO,CAACC,GAAR,CAAYU,IAAZ,IAAoB,IAAjC;AAEA,iCACGC,IADH,CACQ,YAAY;AAChBC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AAEAhB,EAAAA,GAAG,CAACiB,MAAJ,CAAWL,IAAX,EAAiB,MAAMG,OAAO,CAACC,GAAR,CAAa,4BAA2BJ,IAAK,EAA7C,CAAvB;AACD,CALH,EAMGM,KANH,CAMUC,KAAD,IAAW;AAChBJ,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEG,IAAAA;AAAF,GAAZ;AACD,CARH","sourcesContent":["import 'reflect-metadata';\nimport dotenv from \"dotenv\";\n\ndotenv.config();\n\nimport bodyParser from 'body-parser';\nimport express from 'express';\nimport { createConnection } from 'typeorm';\n\nimport router from './api';\n\nimport { authMiddleware, errorHandler, logging, missingRoute } from './utils';\n\n/** Create app */\nconst app = express();\n\nconst appEnv = process.env.APP_ENV || 'development';\n\napp.use(bodyParser.json());\napp.use(authMiddleware);\napp.use(logging);\n\nrouter(app);\n\napp.use(missingRoute);\n\napp.use(errorHandler);\n\n/** Run server after connecting to DB */\nconst port = process.env.PORT || 5000;\n\ncreateConnection()\n  .then(async () => {\n    console.log('DB READY');\n\n    app.listen(port, () => console.log(`Server listening on port ${port}`));\n  })\n  .catch((error) => {\n    console.log({ error })\n  });"],"file":"index.js"}