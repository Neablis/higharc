{"version":3,"sources":["../../src/utils/graphql.ts"],"names":["opMap","eq","Equal","in","In","ne","Not","generateQuery","filter","query","Object","keys","forEach","key","field","op","split"],"mappings":";;;;;;;AAAA;;AAEO,MAAMA,KAAK,GAAG;AAAEC,EAAAA,EAAE,EAAEC,cAAN;AAAaC,EAAAA,EAAE,EAAEC,WAAjB;AAAqBC,EAAAA,EAAE,EAAEC;AAAzB,CAAd;;;AAEA,MAAMC,aAAa,GAAIC,MAAD,IAAY;AACrC,MAAI,CAACA,MAAL,EAAa,OAAO,EAAP;AACb,QAAMC,KAAK,GAAG,EAAd;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYH,MAAZ,EAAoBI,OAApB,CAA6BC,GAAD,IAAS;AACnC,UAAM,CAACC,KAAD,EAAQC,EAAR,IAAcF,GAAG,CAACG,KAAJ,CAAU,GAAV,CAApB;AACAP,IAAAA,KAAK,CAACK,KAAD,CAAL,GAAed,KAAK,CAACe,EAAD,CAAL,CAAUP,MAAM,CAACK,GAAD,CAAhB,CAAf;AACD,GAHD;AAIA,SAAOJ,KAAP;AACH,CARM","sourcesContent":["import { Equal, In, Not } from 'typeorm';\n\nexport const opMap = { eq: Equal, in: In, ne: Not };\n\nexport const generateQuery = (filter) => {\n    if (!filter) return {};\n    const query = {};\n    Object.keys(filter).forEach((key) => {\n      const [field, op] = key.split('_');\n      query[field] = opMap[op](filter[key]);\n    });\n    return query;\n};"],"file":"graphql.js"}