{"version":3,"sources":["../../src/entity/Ingredient.ts"],"names":["IngredientUnit","name","description","Ingredient","ID","nullable","message","Smoothie","smoothie","ingredients","eager","onDelete","type","enum","BaseEntity","addId","id"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;AAEA;;AAEA;;AAUA;;;;IAEYA,c;;;WAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;GAAAA,c,8BAAAA,c;;AAOZ,mCAAiBA,cAAjB,EAAiC;AAC/BC,EAAAA,IAAI,EAAE,iBADyB;AACN;AACzBC,EAAAA,WAAW,EAAE,iCAFkB,CAEiB;;AAFjB,CAAjC;IAOqBC,U,WAFpB,8B,UACA,sB,UAEE,wBAAM,MAAMC,eAAZ,EAAgB;AAAEF,EAAAA,WAAW,EAAE;AAAf,CAAhB,C,UACA,6B,2DAGA,qBAAO;AAAEG,EAAAA,QAAQ,EAAE;AAAZ,CAAP,C,UACA,wBAAM;AAAEA,EAAAA,QAAQ,EAAE,KAAZ;AAAmBH,EAAAA,WAAW,EAAE;AAAhC,CAAN,C,UACA,+BAAU,CAAV,EAAa;AACZI,EAAAA,OAAO,EAAE;AADG,CAAb,C,4DAKA,wBAAU,MAAMC,iBAAhB,EAA2BC,QAAD,IAAcA,QAAQ,CAACC,WAAjD,EAA8D;AAC7DJ,EAAAA,QAAQ,EAAE,KADmD;AAE7DK,EAAAA,KAAK,EAAE,IAFsD;AAG7DC,EAAAA,QAAQ,EAAE;AAHmD,CAA9D,C,4HAOA,qBAAO;AAAEN,EAAAA,QAAQ,EAAE;AAAZ,CAAP,C,WACA,wBAAM;AAAEA,EAAAA,QAAQ,EAAE,KAAZ;AAAmBH,EAAAA,WAAW,EAAE;AAAhC,CAAN,C,WACA,4B,WACA,yBAAI,CAAJ,C,WACA,yBAAI,GAAJ,C,6DAGA,qBAAO;AACNU,EAAAA,IAAI,EAAE,MADA;AAENC,EAAAA,IAAI,EAAEb,cAFA;AAGNK,EAAAA,QAAQ,EAAE;AAHJ,CAAP,C,WAKA,wBAAM,MAAML,cAAZ,EAA4B;AAAEK,EAAAA,QAAQ,EAAE,KAAZ;AAAmBH,EAAAA,WAAW,EAAE;AAAhC,CAA5B,C,WACA,4BAAOF,cAAP,C,sHAGA,wBAAM;AAAEE,EAAAA,WAAW,EAAE;AAAf,CAAN,C,WACA,+BAAiB;AAAEU,EAAAA,IAAI,EAAE;AAAR,CAAjB,C,kGAGA,wBAAM;AAAEV,EAAAA,WAAW,EAAE;AAAf,CAAN,C,WACA,+BAAiB;AAAEU,EAAAA,IAAI,EAAE;AAAR,CAAjB,C,kGAGA,4B,2JA7CH,MAEqBT,UAFrB,SAEwCW,mBAFxC,CAEmD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA4CjDC,EAAAA,KADA,GACQ;AACN,SAAKC,EAAL,GAAU,eAAV;AACD;;AA9CgD,C","sourcesContent":["import { Field, ID, ObjectType, registerEnumType } from 'type-graphql';\nimport { v4 } from 'uuid';\n\nimport { MinLength, IsInt, Min, Max, IsEnum } from \"class-validator\";\n\nimport {\n  BaseEntity,\n  Column,\n  CreateDateColumn,\n  Entity,\n  PrimaryColumn,\n  UpdateDateColumn,\n  BeforeInsert,\n  ManyToOne\n} from 'typeorm';\nimport Smoothie from './Smoothie';\n\nexport enum IngredientUnit {\n  CUP = \"cup\",\n  PINCH = \"pinch\",\n  GRAM = \"gram\",\n  OUNCE = \"ounce\",\n}\n\nregisterEnumType(IngredientUnit, {\n  name: \"IngredientUnits\", // this one is mandatory\n  description: \"Possible Units for a ingredient\", // this one is optional\n});\n\n@ObjectType()\n@Entity()\nexport default class Ingredient extends BaseEntity {\n  @Field(() => ID, { description: 'Unique identifier of the ingredient' })\n  @PrimaryColumn()\n  id: string;\n\n  @Column({ nullable: false })\n  @Field({ nullable: false, description: 'Name of the ingredient' })\n  @MinLength(3, {\n    message: 'Name is too short',\n  })\n  name: string;\n\n  @ManyToOne(() => Smoothie, (smoothie) => smoothie.ingredients, {\n    nullable: false,\n    eager: true,\n    onDelete: 'CASCADE',\n  })\n  smoothie: Smoothie;\n\n  @Column({ nullable: false })\n  @Field({ nullable: false, description: 'How many of the ingredient for recipe' })\n  @IsInt()\n  @Min(0)\n  @Max(100)\n  quantity: number;\n\n  @Column({\n    type: \"enum\",\n    enum: IngredientUnit,\n    nullable: false\n  })\n  @Field(() => IngredientUnit, { nullable: false, description: 'Units for the quantity of the ingredient'})\n  @IsEnum(IngredientUnit)\n  unit: IngredientUnit\n\n  @Field({ description: 'Date Created' })\n  @CreateDateColumn({ type: 'timestamp' })\n  createdAt: Date;\n\n  @Field({ description: 'Date Last Updated' })\n  @UpdateDateColumn({ type: 'timestamp' })\n  updatedAt: Date;\n\n  @BeforeInsert()\n  addId() {\n    this.id = v4();\n  }\n}"],"file":"Ingredient.js"}