{"version":3,"sources":["../../src/entity/Smoothie.ts"],"names":["Smoothie","ID","description","nullable","message","unique","Ingredient","ingredient","smoothie","User","user","smoothies","eager","cascade","onDelete","type","BaseEntity","addId","id"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;AAEA;;AAGA;;AAGA;;AAYA;;AACA;;;;IAKqBA,Q,WAFpB,8B,UACA,sB,UAEE,wBAAM,MAAMC,eAAZ,EAAgB;AAAEC,EAAAA,WAAW,EAAE;AAAf,CAAhB,C,UACA,6B,UACA,+B,2DAGA,qBAAO;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAP,C,UACA,wBAAM;AAAEA,EAAAA,QAAQ,EAAE,KAAZ;AAAmBD,EAAAA,WAAW,EAAE;AAAhC,CAAN,C,UACA,+BAAU,CAAV,EAAa;AACZE,EAAAA,OAAO,EAAE;AADG,CAAb,C,WAGA,oBAAM;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAAN,C,WACA,+B,6DAGA,wBAAU,MAAMC,mBAAhB,EAA6BC,UAAD,IAAgBA,UAAU,CAACC,QAAvD,C,WACA,+B,4DAGA,wBAAU,MAAMC,aAAhB,EAAuBC,IAAD,IAAUA,IAAI,CAACC,SAArC,EAAgD;AAC/CR,EAAAA,QAAQ,EAAE,IADqC;AAE/CS,EAAAA,KAAK,EAAE,IAFwC;AAG/CC,EAAAA,OAAO,EAAE,CAAC,QAAD,CAHsC;AAI/CC,EAAAA,QAAQ,EAAE;AAJqC,CAAhD,C,WAMA,gC,oHAGA,wBAAM;AAAEZ,EAAAA,WAAW,EAAE;AAAf,CAAN,C,WACA,+BAAiB;AAAEa,EAAAA,IAAI,EAAE;AAAR,CAAjB,C,WACA,+B,kGAGA,wBAAM;AAAEb,EAAAA,WAAW,EAAE;AAAf,CAAN,C,WACA,+BAAiB;AAAEa,EAAAA,IAAI,EAAE;AAAR,CAAjB,C,WACA,+B,kGAGA,4B,2JAxCH,MAEqBf,QAFrB,SAEsCgB,mBAFtC,CAEiD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAuC/CC,EAAAA,KADA,GACc;AACZ,SAAKC,EAAL,GAAU,eAAV;AACD;;AAzC8C,C","sourcesContent":["import { Field, ID, ObjectType } from \"type-graphql\"\nimport { v4 } from \"uuid\"\n\nimport {\n  MinLength\n} from \"class-validator\"\nimport { Exclude, Expose } from \"class-transformer\"\n\n\nimport {\n  BaseEntity,\n  Column,\n  CreateDateColumn,\n  Entity,\n  PrimaryColumn,\n  UpdateDateColumn,\n  BeforeInsert,\n  OneToMany,\n  ManyToOne,\n  Index,\n} from \"typeorm\"\nimport Ingredient from \"./Ingredient\"\nimport User from \"./User\"\n\n\n@ObjectType()\n@Entity()\nexport default class Smoothie extends BaseEntity {\n  @Field(() => ID, { description: \"Unique identifier of the recipe\" })\n  @PrimaryColumn()\n  @Expose()\n  id: string;\n\n  @Column({ nullable: false })\n  @Field({ nullable: false, description: \"Name of the recipe (must be longer than 3 characters)\" })\n  @MinLength(3, {\n    message: \"Name is too short\",\n  })\n  @Index({ unique: true })\n  @Expose()\n  name: string;\n\n  @OneToMany(() => Ingredient, (ingredient) => ingredient.smoothie)\n  @Expose()\n  ingredients: Ingredient[];\n\n  @ManyToOne(() => User, (user) => user.smoothies, {\n    nullable: true,\n    eager: true,\n    cascade: [\"insert\"],\n    onDelete: \"CASCADE\"\n  })\n  @Exclude()\n  user: User;\n\n  @Field({ description: \"Date Created\" })\n  @CreateDateColumn({ type: \"timestamp\" })\n  @Expose()\n  createdAt: Date;\n\n  @Field({ description: \"Date Last Updated\" })\n  @UpdateDateColumn({ type: \"timestamp\" })\n  @Expose()\n  updatedAt: Date;\n\n  @BeforeInsert()\n  addId(): void {\n    this.id = v4()\n  }\n}"],"file":"Smoothie.js"}