{"version":3,"sources":["../../src/entity/User.ts"],"names":["User","ID","nullable","message","type","default","BaseEntity","addId","id","hashPassword","password"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;AAGA;;AAKA;;AASA;;;;IAIqBA,I,WAFpB,8B,UACA,sB,UAEE,wBAAM,MAAMC,eAAZ,C,UACA,6B,2DAGA,wBAAM;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAN,C,UACA,qBAAO;AAAEA,EAAAA,QAAQ,EAAE;AAAZ,CAAP,C,2DAGA,wBAAM;AAAEA,EAAAA,QAAQ,EAAE;AAAZ,CAAN,C,WACA,qBAAO;AAAEA,EAAAA,QAAQ,EAAE;AAAZ,CAAP,C,6DAGA,qBAAO;AAAEA,EAAAA,QAAQ,EAAE;AAAZ,CAAP,C,WACA,wBAAM;AAAEA,EAAAA,QAAQ,EAAE;AAAZ,CAAN,C,WACA,8B,6DAGA,qBAAO;AAAEA,EAAAA,QAAQ,EAAE;AAAZ,CAAP,C,WACA,+BAAU,CAAV,EAAa;AACZC,EAAAA,OAAO,EAAE;AADG,CAAb,C,6DAKA,yB,WACA,+BAAiB;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAjB,C,kGAGA,yB,WACA,+BAAiB;AAAEA,EAAAA,IAAI,EAAE;AAAR,CAAjB,C,kGAGA,yB,WACA,qBAAO;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAAP,C,8DAGA,4B,mHAKA,4B,2JA3CH,MAEqBL,IAFrB,SAEkCM,mBAFlC,CAE6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAqC5CC,EAAAA,KADC,GACO;AACP,SAAKC,EAAL,GAAU,eAAV;AACC;;AAED,QACKC,YADL,GACoB;AAClB,SAAKC,QAAL,GAAgB,MAAM,yBAAa,KAAKA,QAAlB,CAAtB;AACF;;AA5C2C,C","sourcesContent":["import { Field, ID, ObjectType } from 'type-graphql';\nimport { v4 } from 'uuid';\nimport * as bcrypt from 'bcryptjs';\n\nimport {\n  IsEmail,\n  MinLength\n} from 'class-validator';\n\nimport {\n  BaseEntity,\n  Column,\n  CreateDateColumn,\n  Entity,\n  PrimaryColumn,\n  UpdateDateColumn,\n  BeforeInsert\n} from 'typeorm';\nimport { hashPassword } from 'utils/';\n\n@ObjectType()\n@Entity()\nexport default class User extends BaseEntity {\n  @Field(() => ID)\n  @PrimaryColumn()\n  id: string;\n\n  @Field({ nullable: true })\n  @Column({ nullable: true })\n  firstName?: string;\n\n  @Field({ nullable: true })\n  @Column({ nullable: true })\n  lastName?: string;\n\n  @Column({ nullable: false })\n  @Field({ nullable: false })\n  @IsEmail()\n  email: string;\n\n  @Column({ nullable: false })\n  @MinLength(6, {\n    message: 'Password is too short',\n  })\n  password: string;\n\n  @Field()\n  @CreateDateColumn({ type: 'timestamp' })\n  createdAt: Date;\n\n  @Field()\n  @UpdateDateColumn({ type: 'timestamp' })\n  updatedAt: Date;\n\n  @Field()\n  @Column({ default: false })\n  isAdmin: boolean;\n\n  @BeforeInsert()\n\taddId() {\n\t\tthis.id = v4();\n  }\n  \n  @BeforeInsert()\n\tasync hashPassword() {\n    this.password = await hashPassword(this.password);\n\t}\n}"],"file":"User.js"}